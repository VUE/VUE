"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.indentIfBreak = exports.ifBreak = exports.dedent = exports.indent = exports.fill = exports.group = exports.join = exports.concat = void 0;
var doc_1 = require("prettier/doc");
var processComments = require("./comments/format-comments").processComments;
/*
 * ------------------------------------------------------------------
 * Wraps the Prettier builder functions to print tokens with comments
 * ------------------------------------------------------------------
 */
function concat(docs) {
    var concatenation = processComments(docs);
    if (!Array.isArray(docs)) {
        return "";
    }
    return concatenation;
}
exports.concat = concat;
function join(sep, docs) {
    return doc_1.builders.join(processComments(sep), processComments(docs));
}
exports.join = join;
function group(docs, opts) {
    var group = doc_1.builders.group(processComments(docs), opts);
    return group.contents === undefined ? "" : group;
}
exports.group = group;
function fill(docs) {
    return doc_1.builders.fill(processComments(docs));
}
exports.fill = fill;
function indent(doc) {
    var processedDoc = processComments(doc);
    if (processedDoc.length === 0) {
        return "";
    }
    return doc_1.builders.indent(processedDoc);
}
exports.indent = indent;
function dedent(doc) {
    var processedDoc = processComments(doc);
    if (processedDoc.length === 0) {
        return "";
    }
    return doc_1.builders.dedent(processComments(doc));
}
exports.dedent = dedent;
function ifBreak(breakContents, flatContents) {
    return doc_1.builders.ifBreak(processComments(breakContents), processComments(flatContents));
}
exports.ifBreak = ifBreak;
function indentIfBreak(contents, opts) {
    return doc_1.builders.indentIfBreak(processComments(contents), opts);
}
exports.indentIfBreak = indentIfBreak;
